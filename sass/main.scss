@import "base/var";
@import "mixins/mixin";
@import "layout/mobile";
@import "layout/desktop";
h1 {
    font-size: $num;
    color: $red-color;
}

.box {
    span {
        color: #f00;
        .box1 {
            margin: 10px;
            font-size: 100px;
        }
    }
}

h2 {
    font-size: $num;
    color: $blue-color;
}

span {
    margin: 10px;
}

//null
@mixin text1($nums, $colors, $dir, $margins:null) {
    span {
        font-size: $nums;
        color: $colors;
        margin: $margins dd {
            text-align: $dir;
        }
    }
}

@include text1(1em, #000, center);
.box2 {
    @include text1(2em, #f00, center);
}

//預設值
@mixin text2($marginleft:20px, $margintop:40px) {
    span {
        margin-left: $marginleft;
        margin-top: $margintop;
    }
}

@include text2(10px, 20px);
@mixin widths ($num-list, $num-width) {
    .row-#{$num-list} {
        width: $num-width;
    }
}

@include widths (classname, 100px);
//extend
.box {
    width: 100px;
    height: 50px;
    border: 1px solid #f00;
}

//extend
.wrapper {
    @extend .box;
}

//＆寫法
.box2 {
    color: blue;
    &.dof {
        margin: 10px;
    }
}

a {
    color: green;
    &:hover {
        color: red;
    }
}

//占位選擇器
%box1 {
    text-align: center;
    width: 100px;
    padding: 20px;
}

.box4 {
    @extend %box1;
}

.box5 {
    @extend %box1;
}

.box6 {
    @extend %box1;
}

// 加法
h1 {
    font-size: 10px + 20;
    width: 20 + 10px;
}

$var01: 20;
// 減法
h2 {
    font-size: $var01 + px;
    width: 20px - 10px;
}

//乘法
h3 {
    font-size: 10px + 20 * 20px;
    width: 2em + 10em;
    padding: 2em * 10;
}

//除法
h4 {
    font: (50px / 5px);
}

$font-base: 16px;
//round 四捨五入
//ceil 無條件進入
//floor 無條件捨去 
h1 {
    font-size: $font-base * 3;
}

h2 {
    font-size: $font-base * 2;
}

h3 {
    font-size: floor($font-base * 1.8);
}

h4 {
    font-size: $font-base * 1.2;
}

h5 {
    font-size: $font-base * 1;
}

//if else 判斷式
@mixin box-width($width) {
    .box-wrapper {
        @if $width>=100px {
            width: $width;
        }
        @else {
            width: $width *2;
        }
    }
}

@include box-width(100px);
//@content
@mixin contents ($widths-num) {
    width: $widths-num;
    height: ($widths-num / 2);
    @content;
}

.contents {
    @include contents (100px) {
        .box1 {
            text-align: center;
        }
    }
    ;
}

//for 迴圈
$for_num: 100;
@for $i from 1 through $for_num {
    .col_#{$i} {
        width: 60px * $i;
    }
}

// grid 格線
@mixin grid-line ($cols) {
    @for $i from 1 through $cols {
        .col-#{$i} {
            width: ($i / $cols) * 100%;
        }
    }
}


/****** grid  ******/

@include grid-line(12);
// @mixin push 
// .margin-left-10 {
//   margin-left:10px;
// } 
// .margin-left-9 {
//   margin-left: 9px;
// }
// .margin-left-8 {
//   margin-left: 8px;
// }
// .margin-left-10-1 
@mixin margin-left($cols) {
    @for $i from $cols through 1 {
        //索引值	//起始值	//結束值
        .margin-left-#{$i} {
            margin-left: $i px;
        }
    }
}

@include margin-left(10);
@mixin margins($dis, $num) {
    @for $i from 1 through $num {
        .margin-#{$dis}-#{$i} {
            margin-#{$dis}: $i+px;
        }
    }
}

@include margins(right, 20);
@include margins(top, 200);
// each 寫法 
@mixin bg-images ($imagesname...) {
    @each $names in $imagesname {
        .#{$names} {
            background-image: url('images/#{$names}.jpg')
        }
    }
}

@include bg-images(test1,
test2,
test3,
test4,test5);

//while

$li-amount : 7;

@while $li-amount > 5 {

 li:nth-child(#{$li-amount}) {
   margin-left : 1px * $li-amount ;
 } 
  $li-amount : $li-amount - 1;
}







